install.packages("tm")
?tm
?tm
??tm
?Corpus
library(tm)
setwd("C:/Users/morga/OneDrive/Documents/2023 Fall/Consulting class/Aided_AAC_Analysis")
T4101 <- read.table("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", header=TRUE, quote="\"")
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
word_freq
str(word_freq)
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
corpus2 <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4102.txt")))
chinese_text2 <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4102.txt", encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
word_freq
word_freq2
install.packages("data.table")
library(tm)
library(data.table)
my_list <- list (word_freq, word_freq2)
data.table::rbindlist(my_list)
my_list
my_list <- list (list(word_freq), list(word_freq2))
data.table::rbindlist(my_list)
my_list <- list (list(word_freq), list(word_freq2))
my_table <- data.table::rbindlist(my_list)
my_table
my_list <- list (word_freq, word_freq2)
my_list
str(word_freq)
my_list <- cbind(word_freq, word_freq2 = word_freq2[names(word_freq)])
my_list
install.packages("wrMisc")
library(tm)
library(wrMisc)
my_list <- mergeVectors(word_freq, word_freq2, NAto0 = TRUE)
my_list
str(my_list)
my_list <- mergeVectors(word_freq, word_freq2, NAto0 = FALSE)
my_list
my_list <- mergeVectors(word_freq, word_freq2, NAto0 = T)
my_list
my_list <- mergeVectors(word_freq, word_freq2)
freq_all <- my_list %>% replace(is.na(.), 0)
library(tm)
library(wrMisc)
library(dplyr)
my_list <- mergeVectors(word_freq, word_freq2)
freq_all <- my_list %>% replace(is.na(.), 0)
freq_all
library(tm)
library(wrMisc)
library(dplyr)
filelist = list.files(pattern = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/*.txt")
filelist
filelist = list.files(pattern = "~/T4/*.txt")
filelist
filelist = list.files(pattern = ".T4/*.txt")
filelist
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
list_of_files
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
num_files <- length(list_of_files)
num_files
#List out all files in folder
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#Total number of files
num_files <- length(list_of_files)
#First file in Folder: Create a named vector of frequencies
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
#Do the same for other files, then combine
for(jj in 2: num_files){
#Read in jj file
corpus2 <- Corpus(VectorSource(readLines(jj)))
chinese_text2 <- readLines(jj, encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
#Combine
word_freq <- mergeVectors(word_freq, word_freq2)
}
word_freq
#List out all files in folder
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#Total number of files
num_files <- length(list_of_files)
#First file in Folder: Create a named vector of frequencies
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
#Do the same for other files, then combine
for(jj in 2: num_files){
#Read in jj file
corpus2 <- Corpus(VectorSource(readLines(list_of_files[jj])))
chinese_text2 <- readLines(list_of_files[jj], encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
#Combine
word_freq <- mergeVectors(word_freq, word_freq2)
}
#Turn NAs to zero
freq_all <- my_list %>% replace(is.na(.), 0)
word_freq
word_freq
?rbindlist
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
corpus2 <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4102.txt")))
chinese_text2 <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4102.txt", encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
list(word_freq, word_freq2)
my_list <- list(word_freq, word_freq2)
rbindlist(my_list, fill=TRUE)
word.list <- split(unname(word_freq),names(word_freq))
word.list2 <- split(unname(word_freq2),names(word_freq2))
my_list <- list(word.list, word.list2)
rbindlist(my_list, fill=TRUE)
freq_all <- my_list %>% replace(is.na(.), 0)
freq_all
freq_all[1]
freq_all[,1]
library(plyr)
temp <- rbind.fill.matrix(t(word_freq), t(word_freq2))
temp[is.na(temp)] <- 0
temp
#List out all files in folder
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#Total number of files
num_files <- length(list_of_files)
#First file in Folder: Create a named vector of frequencies
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
#Do the same for other files, then combine
for(jj in 2: num_files){
#Read in jj file
corpus2 <- Corpus(VectorSource(readLines(list_of_files[jj])))
chinese_text2 <- readLines(list_of_files[jj], encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
#Combine
word_freq <- rbind.fill.matrix(t(word_freq), t(word_freq2))
}
#Turn NAs to zero
word_freq[is.na(temp)] <- 0
word_freq
# Sample named vectors
vec1 <- c(A=1, B=2, C=3)
vec2 <- c(B=4, D=5)
vec3 <- c(A=6, C=7, E=8)
vec4 <- c(B=9, C=10, D=11)
# List of vectors
vectors <- list(vec1, vec2, vec3, vec4)
# Initialize an empty matrix
combined_matrix <- matrix(0, nrow = 0, ncol = length(union(names(vec1), names(vec2))))
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Fill missing values with 0
combined_matrix[is.na(combined_matrix)] <- 0
# Print the combined matrix
print(combined_matrix)
# Sample named vectors
vec1 <- c(A=1, B=2, C=3)
vec2 <- c(B=4, D=5)
vec3 <- c(A=6, C=7, E=8)
vec4 <- c(B=9, C=10, D=11)
# List of vectors
vectors <- list(vec1, vec2, vec3, vec4)
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = length(union(names(vec1), names(vec2))), dimnames = list(NULL, NULL))
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
# Ensure the combined matrix has the correct column names
colnames(combined_matrix) <- combined_names
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Sample named vectors
vec1 <- c(A=1, B=2, C=3)
vec2 <- c(B=4, D=5)
vec3 <- c(A=6, C=7, E=8)
vec4 <- c(B=9, C=10, D=11)
# List of vectors
vectors <- list(vec1, vec2, vec3, vec4)
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = length(union(names(vec1), names(vec2))), dimnames = list(NULL, NULL))
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
# Ensure the combined matrix has the correct column names
colnames(combined_matrix) <- combined_names
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Sample named vectors
vec1 <- c(A=1, B=2, C=3)
vec2 <- c(B=4, D=5)
vec3 <- c(A=6, C=7, E=8)
vec4 <- c(B=9, C=10, D=11)
# List of vectors
vectors <- list(vec1, vec2, vec3, vec4)
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = length(union(names(vec1), names(vec2))))
colnames(combined_matrix) <- sort(union(names(vec1), names(vec2)))
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Fill missing values with 0
combined_matrix[is.na(combined_matrix)] <- 0
# Print the combined matrix with original column names
print(combined_matrix)
?union
# Sample named vectors
vec1 <- c(A=1, B=2, C=3)
vec2 <- c(B=4, D=5)
vec3 <- c(A=6, C=7, E=8)
vec4 <- c(B=9, C=10, D=11)
# List of vectors
vectors <- list(vec1, vec2, vec3, vec4)
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = 0)
colnames(combined_matrix) <- character(0)
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- cbind(combined_matrix, as.matrix(vec[combined_names]))
colnames(combined_matrix) <- combined_names
}
# Sample named vectors
vec1 <- c(A=1, B=2, C=3)
vec2 <- c(B=4, D=5)
vec3 <- c(A=6, C=7, E=8)
vec4 <- c(B=9, C=10, D=11)
# List of vectors
vectors <- list(vec1, vec2, vec3, vec4)
# Initialize an empty matrix
combined_matrix <- matrix(0, nrow = 0, ncol = 0)
col_names <- character(0)
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- unique(c(col_names, names(vec)))
combined_matrix <- cbind(combined_matrix, matrix(0, ncol = length(combined_names)))
colnames(combined_matrix) <- combined_names
combined_matrix <- rbind(combined_matrix, vec[combined_names])
col_names <- combined_names
}
union(names(vectors))
names(vectors)
vectors
vectors
union(names(vec1), names(vec2))
union(names(vec1) names(vec2))
for(ii in 2: length(vectors)){ cur_name<- names(vectors[ii])}
all_names <- names[vectors[1]]
vectors
vectors[1]
names(vectors[1])
vectors$1
vectors[1]
unlist(vectors[1])
names(unlist(vectors[1]))
all_names <- names[unlist(vectors[1])]
all_names <- names(unlist(vectors[1]))
for(ii in 2: length(vectors)){
cur_name<- names(unlist(vectors[ii]))
all_names <- union (all_names, cur_name)}
all_names
combined_matrix <- matrix(0, nrow = 0, ncol = length(all_names)
colnames(combined_matrix) <- sort(all_names)
combined_matrix <- matrix(0, nrow = 0, ncol = length(all_names))
colnames(combined_matrix) <- sort(all_names)
combined_matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
combined_matrix
combined_matrix[is.na(combined_matrix)] <- 0
# Print the combined matrix with original column names
print(combined_matrix)
#List out all files in folder
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#Total number of files
num_files <- length(list_of_files)
#First file in Folder: Create a named vector of frequencies
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
total_list <- list(word_freq)
#Do the same for other files
for(jj in 2: num_files){
#Read in jj file
corpus2 <- Corpus(VectorSource(readLines(list_of_files[jj])))
chinese_text2 <- readLines(list_of_files[jj], encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
#Combine
total_list <- append(total_list, word_freq2)
}
#Extract all names
all_names <- names(unlist(total_list[1]))
for(ii in 2: num_files){
cur_name<- names(unlist(total_list[ii]))
all_names <- union (all_names, cur_name)}
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = length(all_names))
colnames(combined_matrix) <- sort(all_names)
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Fill missing values with 0
combined_matrix[is.na(combined_matrix)] <- 0
# Print the combined matrix with original column names
print(combined_matrix)
num_files
word_freq
total_list <- list(word_freq)
jj <- 2
corpus2 <- Corpus(VectorSource(readLines(list_of_files[jj])))
chinese_text2 <- readLines(list_of_files[jj], encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
word_freq2
total_list <- append(total_list, word_freq2)
total_list
#List out all files in folder
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#Total number of files
num_files <- length(list_of_files)
#First file in Folder: Create a named vector of frequencies
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
total_list <- list(word_freq)
#Do the same for other files
for(jj in 2: num_files){
#Read in jj file
corpus2 <- Corpus(VectorSource(readLines(list_of_files[jj])))
chinese_text2 <- readLines(list_of_files[jj], encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
#Combine
total_list[[jj]] <- word_freq2
}
#Extract all names
all_names <- names(unlist(total_list[1]))
for(ii in 2: num_files){
cur_name<- names(unlist(total_list[ii]))
all_names <- union (all_names, cur_name)}
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = length(all_names))
colnames(combined_matrix) <- sort(all_names)
# Iteratively combine vectors into the matrix
for (vec in vectors) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Fill missing values with 0
combined_matrix[is.na(combined_matrix)] <- 0
# Print the combined matrix with original column names
print(combined_matrix)
total_list
total_list
all_names
combined_matrix <- matrix(0, nrow = 0, ncol = length(all_names))
colnames(combined_matrix) <- sort(all_names)
combined_matrix
#List out all files in folder
list_of_files <- list.files(path = "~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4", recursive = TRUE,
pattern = "\\.txt$",
full.names = TRUE)
#Total number of files
num_files <- length(list_of_files)
#First file in Folder: Create a named vector of frequencies
corpus <- Corpus(VectorSource(readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt")))
chinese_text <- readLines("~/2023 Fall/Consulting class/Aided_AAC_Analysis/T4/T4101.txt", encoding = "UTF-8")
corpus <- tm_map(corpus, content_transformer(tolower))
dtm <- DocumentTermMatrix(corpus)
word_freq <- colSums(as.matrix(dtm))
total_list <- list(word_freq)
#Do the same for other files
for(jj in 2: num_files){
#Read in jj file
corpus2 <- Corpus(VectorSource(readLines(list_of_files[jj])))
chinese_text2 <- readLines(list_of_files[jj], encoding = "UTF-8")
corpus2 <- tm_map(corpus2, content_transformer(tolower))
dtm2 <- DocumentTermMatrix(corpus2)
word_freq2 <- colSums(as.matrix(dtm2))
#Combine
total_list[[jj]] <- word_freq2
}
#Extract all names
all_names <- names(unlist(total_list[1]))
for(ii in 2: num_files){
cur_name <- names(unlist(total_list[ii]))
all_names <- union(all_names, cur_name)}
# Initialize an empty matrix with column names
combined_matrix <- matrix(0, nrow = 0, ncol = length(all_names))
colnames(combined_matrix) <- sort(all_names)
# Iteratively combine vectors into the matrix
for (vec in total_list) {
combined_names <- union(colnames(combined_matrix), names(vec))
combined_matrix <- rbind(combined_matrix, vec[combined_names])
}
# Fill missing values with 0
combined_matrix[is.na(combined_matrix)] <- 0
# Print the combined matrix with original column names
print(combined_matrix)
combined_matrix[,1]
print(combined_matrix[1:5, 1:5])
cleaned_freq <- combined_matrix[, 8:length(all_names)]
cleaned_freq[1:5,1:5]
# Resulting Matrix preview
print(cleaned_freq[1:5, 1:5])
# Resulting Matrix preview
print(cleaned_freq[1:10, 1:10])
